<template>
  <div class="api-view">

    <p>
    <h4>
      不同图形组件的使用大体类似,
      <span class="important">差异的部分会在具体的图形组件下说明,</span>
      下面我们来看看图形组件类似属性有哪些：
    </h4>
    </p>

    <p>
    <h5>
      <ul>
        <li>fill-color：填充色，默认"#000"。</li>
        <li>stroke-color：轮廓色，默认"#000"。</li>
        <li>line-width：线条宽度，默认1(单位px)。</li>
        <li>dash：设置线条虚线，默认为[]表示使用实线绘制。</li>
        <li>type：设置绘图的类型，一般默认为full（填充和轮廓同时画出）</li>
      </ul>
    </h5>
    </p>
    <h1 id='fixed-basic'>
      基本图形组件
    </h1>
    <h2 id="fixed-arc">arc</h2>
    <p>
    <h5>
      以(x,y)为左上角，宽width，高height绘制矩形：
    </h5>
    <pre ui-code>
        <rect x='num' y='num' width='num' height='num' [attributes]></rect>
      </pre>
    <p>
    <h4>
      x、y、width、height的值均为数字必输类型；attributes为非必输属性，均有默认值。
    </h4>
    </p>
    </p>
    <h2 id="fixed-circle">circle</h2>
    <h2 id="fixed-path">path</h2>
    <h2 id="fixed-rect">rect</h2>
    <h2 id="fixed-text">text</h2>
    <h1 id='fixed-combine'>
      复杂图形组件
    </h1>
    <h2 id="fixed-arcs">arcs</h2>
    <p>
    <h5>
      以(cx,cy)为圆心，给定radius为刻度尺长度，将传入的数据data转化为多个扇形呈现：
    </h5>
    <pre ui-code>
        <arcs cx='num' cy='num' data=[array] radius='num' [attributes]></arcs>
      </pre>
    <p>
    <h4>
      cx、cy、radius均为数字必输类型，data为二维数组必输类型；attributes为非必输属性，均有默认值。
    </h4>
    </p>
    </p>
    <h2 id="fixed-polarRuler">polar-ruler</h2>
    <h2 id="fixed-rects">rects</h2>
    <p>
    <h5>
      以(cx,cy)为圆心，给定radius为刻度尺长度，将传入的数据data转化为多个扇形呈现：
    </h5>
    <pre ui-code>
          <arcs cx='num' cy='num' data=[array] radius='num' [attributes]></arcs>
        </pre>
    <p>
    <h4>
      cx、cy、radius均为数字必输类型，data为二维数组必输类型；attributes为非必输属性，均有默认值。
    </h4>
    </p>
    </p>
    <h2 id="fixed-xRuler">x-ruler</h2>
    <h2 id="fixed-yRuler">y-ruler</h2>
  </div>
</template>
<script>
  import changeActive from '../../Service/changeActive.js';
  import fixedScroll from '../../Service/fixedScroll.js';
  export default {
    created() {
      changeActive('menu-2', 'series');
    },
    mounted() {
      fixedScroll(document.getElementById('api-id'), 44);
    }
  };
</script>